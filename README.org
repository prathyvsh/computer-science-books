* Understanding Functional Programming

This is a list of computer science books that [[https://twitter.com/][we]] have compiled after searching in this field for around 8 years now. We have featured the books by gathering opinions from different sources on the Internet, then researching the authors, going through the index and skimming through the books ourselves. Even after being in the field for close to a decade, we have barely read any of these books. We wanted to change that situation and to learn this, we choose to learn these topics from the best books in the field, so we have try to put some effort into the research since we felt it should be useful first for ourselves, then for posterity. We would love to hear from you if we have missed any must reads or hidden gems that would aid us in our journey! [[https://twitter.com/prathyvsh][Tweet to us]] if you know about one.

** Selection Criteria

** Notes

Most sites on the internet suggest to get started with SICP. But for a newcomer, that book is hard. We have personally tried to work through the book, but we had to put it down twice and finish a few other introductions first before getting familiar with it again. So, we wouldn't really recommend it as the first book to tackle from our experience. The book is considered to be introductory because historically, it was an introductory material, but for engineers in IBM.
[Include report by HTDP authors]

Also, an inclination of students who come to the field newly is to reject books saying that they are old. But this is a misstep. In Computer Science as well as in science counter to this perception, old books come out to be of much value. They have much more to teach us in the present. This is because the fundamentals of the field rarely change and these old books are close to the source in that they are reflections of people who have contributed to those foundations themselves or have been around in a part of history when this knowledge was not diluted. So whenever you hear about an olden book being mentioned by your colleague or friend, give it some due consideration before rejecting it as outdated. It might be one of those exhibiting this timeless quality whereby they act as replenished reservoir of foundational lessons to teach us.

We have chosen to list the language specific books are listed towards the bottom.

* Functional Programming

** [[https://htdp.org/][How to Design Programs]]

[[https://web.archive.org/web/20190429031432if_/https://htdp.org/htdp-2e-cover.gif]]

Buy: [[https://amzn.to/2O7hHOx][Edition 1]], Edition 2

Authors: Matthias Felleisen, Robert Bruce Findler, Matthew Flatt, Shriram Krishnamurthi

*** Topics Addressed:
- Datatypes
- Functions
- Testing
- Enumeration
- DSLs
- Lists
- Recursion
- Abstraction
- Lambda Functions
- Scope
- Pattern Matching
- Lists
- Trees
- Interpreters
- Data representation
- Algorithms
- Tail Recursion

HtDP is a beginner level introduction to the world of functional programming. Fairly easy book to go through (apart from that tough nut 12.4.1 exercise in the first edition) and rewarding of the effort you put into it.

[[https://github.com/prathyvsh/htdp][Book Review and Workout]]

* Other books under considered

** Functional Thinking â€” Neal Ford


* Language specific

** ML

** LISP

** Scheme

** Haskell
- Learn You a Haskell for Great Good
- Write Yourself a Scheme in 48 Hours
- Real World Haskell
- Haskell Programming from First Principles

** Clojure
